// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MediaType {
  PROFILE_IMAGE
  BUSINESS_IMAGE
  REVIEW_IMAGE
}

enum Category {
  RESTAURANT
  PARK
  CAFETERIA
  SHOPPING
  ATTRACTION
  MUSEUM
  THEATER
  GYM
  HOTEL
  RETAIL
  SERVICE
  ENTERTAINMENT
  HEALTH
  BEAUTY
  OTHERS
  COFFEE_SHOP
  BAR
  LIBRARY
  CLUB
  ART_GALLERY
  ZOO
  SPA
  HOSPITAL
  EDUCATION
  TRANSPORTATION
  OFFICE
  WORKSHOP
  PET_FRIENDLY
  BANK
  SUPERMARKET
  FITNESS
  FARM
  PHARMACY
  ONLINE_STORE
  RESORT
  CASINO
  NIGHTCLUB
  SPORTS
  LEISURE
  EVENT_VENUE
}

enum Amenity {
  WIFI
  PARKING
  AIR_CONDITIONING
  FRONT_DESK_24_HOURS
  PET_FRIENDLY
  ELEVATOR
  DISABLED_ACCESS
  BACKYARD
  SMOKING_AREA
  LAUNDRY
  ROOM_SERVICE
  SAFE
  SECURITY
  ATM
  GARDEN
  LUGGAGE_STORAGE
  VENDING_MACHINE
  RESTROOMS
}

model User {
  id String @id @default(uuid())
  email String @unique
  username String @unique
  phone String?
  address String?
  password String
  name String
  bio String?
  languages String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  businesses Business[]
  profileImage  String?
  reviews Review[]
}

model Media {
  id String @id @default(uuid())
  url String
  type  MediaType 

  business Business? @relation(fields: [businessId], references: [id])
  businessId String? 

  user User? @relation(fields: [userId], references: [id])
  userId String? @unique()
}

model Business{
  id String @id @default(uuid())
  name String
  description String
  category Category @default(OTHERS) 
  subcategory  String?
  amenities Amenity[]
  establishedYear Int
  street String
  city String
  state String
  country String
  postalCode String
  phone String
  email String
  website String
  hours String
  images Media[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner User @relation(fields: [ownerId], references: [id])
  ownerId String

  reviews Review[]
}

model Review{
  id String @id @default(uuid())
  content String
  rating Int 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author User @relation(fields: [authorId], references: [id])
  authorId String

  business Business @relation(fields: [businessId], references: [id])
  businessId String
}
